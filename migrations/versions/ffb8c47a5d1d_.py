"""empty message

Revision ID: ffb8c47a5d1d
Revises: 
Create Date: 2023-12-16 22:01:49.236816

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ffb8c47a5d1d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bookings')
    op.drop_table('services')
    op.drop_table('staff')
    op.drop_table('rooms')
    op.drop_table('clients')
    op.drop_table('room_categories')
    op.drop_table('client_services')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('client_services',
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_of_service', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('time_of_service', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='client_services_client_id_fkey'),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], name='client_services_service_id_fkey')
    )
    op.create_table('room_categories',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('room_categories_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('base_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='room_categories_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('clients',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('clients_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='clients_pkey'),
    sa.UniqueConstraint('email', name='clients_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('rooms',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('rooms_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('number', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('is_occupied', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('max_guests', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['room_categories.id'], name='rooms_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='rooms_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('staff',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('staff_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('position', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='staff_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('services',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='services_pkey')
    )
    op.create_table('bookings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('room_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('staff_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('check_in_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('check_out_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('is_extended', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('total_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], name='bookings_client_id_fkey'),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], name='bookings_room_id_fkey'),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], name='bookings_staff_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='bookings_pkey')
    )
    # ### end Alembic commands ###
